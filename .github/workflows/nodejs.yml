# This workflow will do a clean install of node dependencies, build the source code and deploy the package to server

name: Node.js CI & Deploy

on:
  push:
    branches: [ master ]
    paths: [ backend/**, frontend/**, scripts/**, .github/workflows/* ]
  pull_request:
    branches: [ master ]
    paths: [ backend/**, frontend/**, scripts/**, .github/workflows/* ]

jobs:        
  build:
    name: Build -> Deploy
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    
    - name: Install Frontend Packages
      run: | 
        cd frontend
        npm install
    
    - name: Create Frontend production Files 
      run: |
        unset CI      
        cd frontend
        npm run build --if-present
        
    - name: Copy Files for deployment
      run: | 
        cd backend
        mkdir static
        cp -r ../frontend/build/* static/
    
    - name: Install Backend package
      run: |
        cd backend
        npm install
    
    - name: Stop Remote Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_PRIVATE_KEY }}
        sync: true
        script: sudo systemctl stop moment-back.service         
    
    - name: Wait for Stopping
      run: sleep 10       
    
    - name: Deploy Express code to server
      id: deploy
      uses: Pendect/action-rsyncer@v1.1.0
      env:
        DEPLOY_KEY: ${{ secrets.SERVER_PRIVATE_KEY }}
      with:
        flags: '-a -P --delete'
        options: ''
        ssh_options: ''
        src: 'backend/*'
        dest: '${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/var/www/moment.ninja'

    - name: Display status from deploy Express
      run: echo "${{ steps.deploy.outputs.status }}"
    
    - name: Deploy scripts to server
      id: deploy_Scripts
      uses: Pendect/action-rsyncer@v1.1.0
      env:
        DEPLOY_KEY: ${{ secrets.SERVER_PRIVATE_KEY }}
      with:
        flags: '-a -P --delete'
        options: ''
        ssh_options: ''
        src: 'scripts/*'
        dest: '${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:~/scripts'
    
    - name: Clear Data
      if: "!contains(github.event.head_commit.message, '[clear-data]')"
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_PRIVATE_KEY }}
        sync: true
        script: sudo bash ~/scripts/clearData.sh production      
    
    - name: Restart Express Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.SERVER_PRIVATE_KEY }}
        sync: true
        script: sudo systemctl restart moment-back.service 
    
