# This workflow will do a clean install of node dependencies, build the source code and deploy the package to server

name: Node.js CI & Deploy

on:
  push:
    branches: [ master ]
    paths-ignore: 
      - "docs/**"
  pull_request:
    branches: [ master ]

jobs:        
  build:
    name: Build
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci-skip]')"
    
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    
    - name: Install Frontend Packages
      run: | 
        cd frontend
        npm ci
    
    - name: Create Frontend production Files 
      run: |
        unset CI      
        cd frontend
        npm run build --if-present
        
    - name: Copy Files for deployment
      run: | 
        cd backend
        mkdir static
        cp -r ../frontend/build/* static/
    
    - name: Install Backend package
      run: |
        cd backend
        npm ci
            
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
    - name: Prepare SSH Public Key 
      run: |
        touch ~/.ssh/deploy
        echo ${{ secrets.SERVER_PRIVATE_KEY }} >> ~/.ssh/deploy
        chmod 600 ~/.ssh/deploy
        echo -e "Host ${{ secrets.SERVER_HOST }}\n\tStrictHostKeyChecking no\n\tIdentityFile ~/.ssh/deploy" >> ~/.ssh/config
        
    - name: Stop Server
      run: |
        echo "Stopping Express Server..."
        ssh -t root@${{ secrets.SERVER_HOST }} "sudo systemctl stop moment-back.service"
        sleep 10       
    
    - name: Deploy Server
      run: |    
        rsync -a -P --delete backend/* root@${{ secrets.SERVER_HOST }}:/var/www/moment.ninja
    
    - name: Deploy Server Scripts
      run: |
        rsync -a -P --delete scripts/* root@${{ secrets.SERVER_HOST }}:~/scripts
          
    - name: Clear Data
      if: "!contains(github.event.head_commit.message, '[clear-data]')"
      run: |
        echo "Detect cmd to clear server uploads and mongo DB"
        ssh -t root@${{ secrets.SERVER_HOST }} "sudo bash ~/scripts/clearData.sh production"
    
    - name: Restart Server
      run: |
        echo "Restart Express Server..."
        sleep 10
        ssh -t root@${{ secrets.SERVER_HOST }} "sudo systemctl restart moment-back.service"
